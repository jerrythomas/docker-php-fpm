FROM alpine:3.8

# Set PHP version
ENV PHP_VERSION "5"

# Install required packages
RUN apk add --update --no-cache \
   curl \
   binutils \
   bash \
   gettext \
   nginx \
   php${PHP_VERSION} \
   php${PHP_VERSION}-intl \
   php${PHP_VERSION}-phpdbg \
   php${PHP_VERSION}-gmp \
   php${PHP_VERSION}-common \
   php${PHP_VERSION}-fpm \
   php${PHP_VERSION}-enchant \
   php${PHP_VERSION}-pspell \
   php${PHP_VERSION}-snmp \
   php${PHP_VERSION}-dev \
   php${PHP_VERSION}-xml \
   php${PHP_VERSION}-xsl \
   php${PHP_VERSION}-xmlrpc \
   php${PHP_VERSION}-embed \
   php${PHP_VERSION}-dba \
   php${PHP_VERSION}-sqlite3 \
   php${PHP_VERSION}-mysql \
   php${PHP_VERSION}-pgsql \
   php${PHP_VERSION}-odbc \
   php${PHP_VERSION}-opcache \
   php${PHP_VERSION}-ldap \
   php${PHP_VERSION}-gd  \
   php${PHP_VERSION}-json \
   php${PHP_VERSION}-curl \
   php${PHP_VERSION}-imap \
   php${PHP_VERSION}-zip \
   php${PHP_VERSION}-cgi \
   php${PHP_VERSION}-mcrypt \
   php${PHP_VERSION}-bcmath \
   php${PHP_VERSION}-dom \
   php${PHP_VERSION}-soap \
   php${PHP_VERSION}-apcu \
   php${PHP_VERSION}-bz2 \
   php${PHP_VERSION}-cli \
   php${PHP_VERSION}-pear \
   php${PHP_VERSION}-phar \
   php${PHP_VERSION}-openssl \
   php${PHP_VERSION}-pdo \
   php${PHP_VERSION}-ftp \
   php${PHP_VERSION}-sockets \
   php${PHP_VERSION}-iconv \
   php${PHP_VERSION}-pdo_mysql \
   php${PHP_VERSION}-pdo_pgsql \
   php${PHP_VERSION}-pdo_sqlite \
   php${PHP_VERSION}-pdo_odbc \
 && rm -rf /var/cache/apk/*

RUN ln -s /usr/bin/php${PHP_VERSION} /usr/bin/php \
   && ln -s /usr/bin/phpize${PHP_VERSION} /usr/bin/phpize \
   && ln -s /usr/bin/php-config${PHP_VERSION} /usr/bin/php-config \
   && ln -s /usr/bin/php-fpm${PHP_VERSION} /usr/bin/php-fpm

# Add docker utilities for php
COPY utils/* /usr/local/bin/
RUN chmod +x /usr/local/bin/docker-php-* \
   && mkdir -p /usr/src/php/ext /var/www/html /usr/local/etc/php \
   && ln -s /etc/php${PHP_VERSION}/conf.d /usr/local/etc/php/conf.d

# Install dependencies for pecl install
RUN apk add --no-cache \
        autoconf g++ make \
        zlib-dev imagemagick6-dev openssl-dev \
        libmemcached zlib imagemagick6

# Install PHP extensions and enable
RUN pecl install xdebug-2.5.5
RUN yes | CFLAGS="-fgnu89-inline" pecl install memcache-3.0.8
RUN yes | pecl install imagick-3.4.3
RUN echo "/usr" | pecl install stomp-1.0.9
RUN docker-php-ext-enable memcache xdebug imagick stomp

# Install Composer
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

# Cleanup build dependencies
RUN apk del --purge autoconf g++ make zlib-dev imagemagick6-dev

# Configure PHP-FPM
RUN touch /etc/php${PHP_VERSION}/fpm.d/www.conf
RUN sed -i 's/^listen = 127\.0\.0\.1:9000$/listen = \/var\/run\/php-fpm.sock/' /etc/php${PHP_VERSION}/php-fpm.conf
RUN sed -i 's/user = nobody/user = www-data/' /etc/php${PHP_VERSION}/php-fpm.conf
RUN sed -i 's/group = nobody/group = www-data/' /etc/php${PHP_VERSION}/php-fpm.conf
RUN sed -i 's/;cgi.fix_pathinfo=1/cgi.fix_pathinfo=0/' /etc/php${PHP_VERSION}/php.ini

RUN mkdir -p /var/www/html /run/nginx

COPY conf/nginx.conf /etc/nginx/nginx.conf
COPY conf/sites-enabled/default /etc/nginx/conf.d/default.conf

COPY index.php /var/www/html/index.php

# Set up permissions
RUN adduser -D -g '' -G www-data www-data
RUN chown -R www-data:www-data /var/www/html
RUN chown -R www-data:www-data /var/log /run /var/run /var/lib /var/tmp /usr/src/php/ext \
    && chmod -R 755 /var/www/html

WORKDIR /var/www/html
EXPOSE 80
USER www-data
ENTRYPOINT ["sh", "-c", "php-fpm && nginx -g 'daemon off;'"]
